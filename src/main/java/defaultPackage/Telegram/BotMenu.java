package defaultPackage.Telegram;

import java.sql.Connection;
import java.sql.DriverManager;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.UUID;

import defaultPackage.Infrastructure.DatabaseDAO;
import defaultPackage.Infrastructure.UserRepository;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.api.objects.User;


public class BotMenu extends TelegramLongPollingBot {

    private final String username = "@remembering_007_bot"; // –∏–º—è –±–æ—Ç–∞
    private final UserRepository userRepo;

    public BotMenu(UserRepository userRepo)
    {
        super("6344773460:AAGlQbXDzHijBYpnMHuExjm9D90PATWr8aU");
        this.userRepo = userRepo;
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            long chatId = update.getMessage().getChatId();
            String username = update.getMessage().getFrom().getUserName();

            // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
            if (!userRepo.userExists(chatId)) {

                sendTextMessage(chatId, "–≠—Ç–æ –±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞üîî. –ù–∏–∂–µ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–º:\n ‚úÖ1 –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ - 300—Ä. \n ‚úÖ2 –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è 500—Ä. \n ‚úÖ3 –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è - 700—Ä. \n  ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ–ë–µ–∑–ª–∏–º–∏—Ç - 1 –∫–∞—Å–∞—Ä–±.‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ \n –ù–æ–º–µ—Ä –∫–∏–≤–∏: 89172498712 ");
                var user = new defaultPackage.Core.User();
                user.username = username;
                user.id = UUID.randomUUID();
                user.chatId = String.valueOf(chatId);

                userRepo.Add(user);
            }

            String messageText = update.getMessage().getText();

            //Buttons(chatId);
            if (messageText.toLowerCase().contains("–ø—Ä–∏–≤–µ—Ç")) {
                    String greetingMessage = String.format("–ó–¥—Ä–∞–≤, %s!", username);
                    sendTextMessage(chatId, greetingMessage);

            } else if (messageText.toLowerCase().contains("–¥–µ–ª–∞")) {
                sendTextMessage(chatId, "–•–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ! –ê —É –≤–∞—Å?");
            }
        }
    }

    // –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    private void sendTextMessage(long chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId); // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —á–∞—Ç–∞
        message.setText(text);
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏
    private void Buttons(long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        keyboardMarkup.setResizeKeyboard(true);

        List<KeyboardRow> keyboard = new ArrayList<>();
        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("–ö–æ–º–∞–Ω–¥–∞ 1"));
        row1.add(new KeyboardButton("–ö–æ–º–∞–Ω–¥–∞ 2"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("–ö–æ–º–∞–Ω–¥–∞ 3"));
        row2.add(new KeyboardButton("–ö–æ–º–∞–Ω–¥–∞ 4"));

        keyboard.add(row1);
        keyboard.add(row2);

        keyboardMarkup.setKeyboard(keyboard);
        message.setReplyMarkup(keyboardMarkup);

        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    @Override
    public String getBotUsername() {
        return username;
    }

}
